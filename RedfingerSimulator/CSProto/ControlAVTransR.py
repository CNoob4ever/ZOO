# automatically generated by the FlatBuffers compiler, do not modify

# namespace: CSProto

import flatbuffers

class ControlAVTransR(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsControlAVTransR(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = ControlAVTransR()
        x.Init(buf, n + offset)
        return x

    # ControlAVTransR
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # ControlAVTransR
    def Code(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # ControlAVTransR
    def Msg(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return ""

    # ControlAVTransR
    def Audio(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos)
        return 1

    # ControlAVTransR
    def Video(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos)
        return 1

    # ControlAVTransR
    def Subtitle(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos)
        return 0

def ControlAVTransRStart(builder): builder.StartObject(5)
def ControlAVTransRAddCode(builder, code): builder.PrependInt32Slot(0, code, 0)
def ControlAVTransRAddMsg(builder, msg): builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(msg), 0)
def ControlAVTransRAddAudio(builder, audio): builder.PrependBoolSlot(2, audio, 1)
def ControlAVTransRAddVideo(builder, video): builder.PrependBoolSlot(3, video, 1)
def ControlAVTransRAddSubtitle(builder, subtitle): builder.PrependBoolSlot(4, subtitle, 0)
def ControlAVTransREnd(builder): return builder.EndObject()
