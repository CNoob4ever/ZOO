# automatically generated by the FlatBuffers compiler, do not modify

# namespace: CSProto

import flatbuffers

class InputTouch(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsInputTouch(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = InputTouch()
        x.Init(buf, n + offset)
        return x

    # InputTouch
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # InputTouch
    def Index(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int32Flags, o + self._tab.Pos)
        return 0

    # InputTouch
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # InputTouch
    def Touch(self, j):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            x = self._tab.Vector(o)
            x += flatbuffers.number_types.UOffsetTFlags.py_type(j) * 12
            from .TouchInfo import TouchInfo
            obj = TouchInfo()
            obj.Init(self._tab.Bytes, x)
            return obj
        return None

    # InputTouch
    def TouchLength(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.VectorLen(o)
        return 0

def InputTouchStart(builder): builder.StartObject(3)
def InputTouchAddIndex(builder, index): builder.PrependInt32Slot(0, index, 0)
def InputTouchAddType(builder, type): builder.PrependUint8Slot(1, type, 0)
def InputTouchAddTouch(builder, touch): builder.PrependUOffsetTRelativeSlot(2, flatbuffers.number_types.UOffsetTFlags.py_type(touch), 0)
def InputTouchStartTouchVector(builder, numElems): return builder.StartVector(12, numElems, 4)
def InputTouchEnd(builder): return builder.EndObject()
